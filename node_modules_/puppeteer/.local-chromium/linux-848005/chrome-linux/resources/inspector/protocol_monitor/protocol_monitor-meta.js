import{i18n as o}from"../i18n/i18n.js";import{Runtime as t}from"../root/root.js";import{ViewManager as r}from"../ui/ui.js";const i={protocolMonitor:"Protocol monitor",showProtocolMonitor:"Show Protocol monitor"},n=o.registerUIStrings("protocol_monitor/protocol_monitor-meta.ts",i),e=o.getLazilyComputedLocalizedString.bind(void 0,n);let m;r.registerViewExtension({location:"drawer-view",id:"protocol-monitor",title:e(i.protocolMonitor),commandPrompt:e(i.showProtocolMonitor),order:100,persistence:"closeable",loadView:async()=>(await async function(){return m||(await t.Runtime.instance().loadModulePromise("protocol_monitor"),m=await import("./protocol_monitor.js")),m}()).ProtocolMonitor.ProtocolMonitorImpl.instance(),experiment:t.ExperimentName.PROTOCOL_MONITOR});export{i as UIStrings};
