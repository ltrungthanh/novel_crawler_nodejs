import{i18n as e}from"../i18n/i18n.js";import{Runtime as t}from"../root/root.js";import{ViewManager as o,ActionRegistration as r}from"../ui/ui.js";const a={coverage:"Coverage",showCoverage:"Show Coverage",instrumentCoverage:"Instrument coverage",stopInstrumentingCoverageAndShow:"Stop instrumenting coverage and show results",startInstrumentingCoverageAnd:"Start instrumenting coverage and reload page"},n=e.registerUIStrings("coverage/coverage-meta.ts",a),i=e.getLazilyComputedLocalizedString.bind(void 0,n);let g;async function s(){return g||(await t.Runtime.instance().loadModulePromise("coverage"),g=await import("./coverage.js")),g}o.registerViewExtension({location:"drawer-view",id:"coverage",title:i(a.coverage),commandPrompt:i(a.showCoverage),persistence:"closeable",order:100,loadView:async()=>(await s()).CoverageView.CoverageView.instance()}),r.registerActionExtension({actionId:"coverage.toggle-recording",iconClass:"largeicon-start-recording",toggleable:!0,toggledIconClass:"largeicon-stop-recording",toggleWithRedColor:!0,loadActionDelegate:async()=>(await s()).CoverageView.ActionDelegate.instance(),category:r.ActionCategory.PERFORMANCE,options:[{value:!0,title:i(a.instrumentCoverage)},{value:!1,title:i(a.stopInstrumentingCoverageAndShow)}]}),r.registerActionExtension({actionId:"coverage.start-with-reload",iconClass:"largeicon-refresh",loadActionDelegate:async()=>(await s()).CoverageView.ActionDelegate.instance(),category:r.ActionCategory.PERFORMANCE,title:i(a.startInstrumentingCoverageAnd)});export{a as UIStrings};
