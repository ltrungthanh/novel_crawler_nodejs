import{Settings as e}from"../common/common.js";import{i18n as t}from"../i18n/i18n.js";const r={network:"Network",preserveLog:"Preserve log",preserve:"preserve",clear:"clear",reset:"reset",preserveLogOnPageReload:"Preserve log on page reload / navigation",doNotPreserveLogOnPageReload:"Do not preserve log on page reload / navigation",recordNetworkLog:"Record network log"},o=t.registerUIStrings("browser_sdk/browser_sdk-meta.ts",r),g=t.getLazilyComputedLocalizedString.bind(void 0,o);e.registerSettingExtension({category:e.SettingCategoryObject.NETWORK,title:g(r.preserveLog),settingName:"network_log.preserve-log",settingType:e.SettingTypeObject.BOOLEAN,defaultValue:!1,tags:[g(r.preserve),g(r.clear),g(r.reset)],options:[{value:!0,title:g(r.preserveLogOnPageReload)},{value:!1,title:g(r.doNotPreserveLogOnPageReload)}]}),e.registerSettingExtension({category:e.SettingCategoryObject.NETWORK,title:g(r.recordNetworkLog),settingName:"network_log.record-log",settingType:e.SettingTypeObject.BOOLEAN,defaultValue:!0,storageType:e.SettingStorageType.Session});export{r as UIStrings};
